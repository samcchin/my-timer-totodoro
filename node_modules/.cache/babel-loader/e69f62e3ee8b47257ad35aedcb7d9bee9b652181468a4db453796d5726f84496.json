{"ast":null,"code":"var _jsxFileName = \"/Users/sam/hack-reactor/projects/my-timer-pomotoro/src/components/timer/Clock/Clock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport './clock.css';\nimport whiteTotoro from '../../../assets/mini_white_totoro.png';\nimport { StateContext } from '../../state_provider/StateProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Clock = () => {\n  _s();\n  const {\n    time,\n    setTime,\n    isActive,\n    setIsActive\n  } = useContext(StateContext);\n  useEffect(() => {\n    if (isActive && time > 0) {\n      const interval = setInterval(() => {\n        setTime(time => time - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [time, isActive]);\n  const toggleClock = () => {\n    setIsActive(!isActive);\n  };\n  const resetTime = () => {};\n  const getTime = time => {\n    const minute = Math.floor(time / 60);\n    const second = time % 60;\n    return `${minute < 10 ? \"0\" + minute : minute}:${second < 10 ? \"0\" + second : second}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer_text\",\n        children: getTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleClock,\n        className: \"start_pause_button\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"white-totoro\",\n          src: whiteTotoro,\n          alt: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), isActive ? \"Pause\" : \"Start\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset_button\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"white-totoro\",\n          src: whiteTotoro,\n          alt: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \"Reset\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Clock, \"uFBw4rGVABCfCSkCBVfKm8+i41c=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useContext","useEffect","whiteTotoro","StateContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Clock","_s","time","setTime","isActive","setIsActive","interval","setInterval","clearInterval","toggleClock","resetTime","getTime","minute","Math","floor","second","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/sam/hack-reactor/projects/my-timer-pomotoro/src/components/timer/Clock/Clock.jsx"],"sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport './clock.css';\nimport whiteTotoro from '../../../assets/mini_white_totoro.png'\nimport { StateContext } from '../../state_provider/StateProvider';\n\nconst Clock = () => {\n    const {time, setTime, isActive, setIsActive} = useContext(StateContext);\n    useEffect(() => {\n        if(isActive && time > 0){\n            const interval = setInterval(() => {\n                setTime((time) => time - 1);\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n    }, [time, isActive]);\n\n    const toggleClock = () => {\n        setIsActive(!isActive);\n    }\n\n    const resetTime = () => {\n        \n    }\n    const getTime = (time) => {\n        const minute = Math.floor(time / 60);\n        const second = time % 60;\n        return `${minute < 10 ? \"0\" + minute : minute}:${second < 10 ? \"0\" + second:second}`;\n\n    }\n\n  return (\n    <>\n    <div className=\"clock_container\">\n        <div className=\"timer_text\">{getTime(time)}</div>\n        <button onClick={toggleClock} className=\"start_pause_button\">\n            <img className=\"white-totoro\" src={whiteTotoro} alt=\"Image\"/>\n            {isActive ? \"Pause\":\"Start\"}\n        </button>\n        <button className=\"reset_button\">\n            <img className=\"white-totoro\" src={whiteTotoro} alt=\"Image\"/>\n            Reset\n        </button>\n    </div>\n    </>\n  )\n}\n\nexport default Clock\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,SAASC,YAAY,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAACC,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGb,UAAU,CAACG,YAAY,CAAC;EACvEF,SAAS,CAAC,MAAM;IACZ,IAAGW,QAAQ,IAAIF,IAAI,GAAG,CAAC,EAAC;MACpB,MAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/BJ,OAAO,CAAED,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC/B,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC;IACxC;EACJ,CAAC,EAAE,CAACJ,IAAI,EAAEE,QAAQ,CAAC,CAAC;EAEpB,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBJ,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMM,SAAS,GAAGA,CAAA,KAAM,CAExB,CAAC;EACD,MAAMC,OAAO,GAAIT,IAAI,IAAK;IACtB,MAAMU,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACZ,IAAI,GAAG,EAAE,CAAC;IACpC,MAAMa,MAAM,GAAGb,IAAI,GAAG,EAAE;IACxB,OAAQ,GAAEU,MAAM,GAAG,EAAE,GAAG,GAAG,GAAGA,MAAM,GAAGA,MAAO,IAAGG,MAAM,GAAG,EAAE,GAAG,GAAG,GAAGA,MAAM,GAACA,MAAO,EAAC;EAExF,CAAC;EAEH,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACAnB,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC5BnB,OAAA;QAAKoB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAEL,OAAO,CAACT,IAAI;MAAC;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjDxB,OAAA;QAAQyB,OAAO,EAAEb,WAAY;QAACQ,SAAS,EAAC,oBAAoB;QAAAD,QAAA,gBACxDnB,OAAA;UAAKoB,SAAS,EAAC,cAAc;UAACM,GAAG,EAAE7B,WAAY;UAAC8B,GAAG,EAAC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EAC5DjB,QAAQ,GAAG,OAAO,GAAC,OAAO;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACTxB,OAAA;QAAQoB,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC5BnB,OAAA;UAAKoB,SAAS,EAAC,cAAc;UAACM,GAAG,EAAE7B,WAAY;UAAC8B,GAAG,EAAC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,SAEjE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC,gBACJ,CAAC;AAEP,CAAC;AAAApB,EAAA,CAxCKD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA0CX,eAAeA,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}